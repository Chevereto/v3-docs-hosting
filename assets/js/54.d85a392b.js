(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{426:function(e,t,a){"use strict";a.r(t);var s=a(46),n=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"root-install-lemp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#root-install-lemp"}},[e._v("#")]),e._v(" Root install (LEMP)")]),e._v(" "),a("p",[e._v("This guide is for "),a("strong",[e._v("Ubuntu 18.04.3 (LTS) x64")]),e._v(" and it will install Chevereto in a LEMP stack (Linux, NGINX, MySQL and PHP).")]),e._v(" "),a("blockquote",[a("p",[e._v("Replace "),a("code",[e._v("example.com")]),e._v(" with your own domain")])]),e._v(" "),a("h2",{attrs:{id:"prepare-the-system"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#prepare-the-system"}},[e._v("#")]),e._v(" Prepare the system")]),e._v(" "),a("p",[e._v("Before begin, make sure that the base system is updated.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("sudo apt update && sudo apt upgrade\n")])])]),a("p",[e._v("Go with the recommended option if asked about updating or keep packages.")]),e._v(" "),a("h2",{attrs:{id:"install-nginx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#install-nginx"}},[e._v("#")]),e._v(" Install NGINX")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("sudo apt install nginx\n")])])]),a("h2",{attrs:{id:"install-mysql-database"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#install-mysql-database"}},[e._v("#")]),e._v(" Install MySQL database")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("sudo apt install mysql-server\n")])])]),a("p",[e._v("Enter to the MySQL console.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("sudo mysql -u root\n")])])]),a("p",[e._v("Once in the MySQL console, you will see a "),a("code",[e._v("mysql>")]),e._v(" prompt. Run the following statements:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("CREATE DATABASE chevereto;\nCREATE USER 'chevereto' IDENTIFIED BY 'enter_a_password_here';\nGRANT ALL ON chevereto.* TO 'chevereto' IDENTIFIED BY 'enter_a_password_here';\nquit\n")])])]),a("p",[a("strong",[e._v("Note:")]),e._v(" You must take note of the database name, user and password (where it reads "),a("code",[e._v("enter_a_password_here")]),e._v(") as these details will be required later on.")]),e._v(" "),a("p",[e._v("Once the database, user and permissions are set, run the following command to secure your MySQL installation.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("sudo mysql_secure_installation\n")])])]),a("p",[e._v("Answer all the questions as follows.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("Set root password? [Y/n] n\nRemove anonymous users? [Y/n] y\nDisallow root login remotely? [Y/n] y\nRemove test database and access to it? [Y/n] y\nReload privilege tables now? [Y/n] y\n")])])]),a("h2",{attrs:{id:"install-php"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#install-php"}},[e._v("#")]),e._v(" Install PHP")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("sudo apt install php-fpm php-zip php-curl php-mbstring php-gd php-mysql\n")])])]),a("p",[e._v("Create the "),a("code",[e._v("chevereto.ini")]),e._v(" file using the nano editor.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("sudo nano /etc/php/7.2/fpm/conf.d/chevereto.ini\n")])])]),a("p",[e._v("Paste "),a("code",[e._v("Ctrl+Shift+V")]),e._v(" this:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("upload_max_filesize = 20M;\npost_max_size = 20M;\nmax_execution_time = 30;\nmemory_limit = 512M;\n")])])]),a("p",[e._v("Write close "),a("code",[e._v("Ctrl+o Ctrl+x")]),e._v(".")]),e._v(" "),a("h2",{attrs:{id:"setup-the-website"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#setup-the-website"}},[e._v("#")]),e._v(" Setup the website")]),e._v(" "),a("p",[e._v("Create the path for the website files and assign the "),a("code",[e._v("www-data")]),e._v(" owner and group.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("sudo mkdir -p /var/www/html/example.com/public_html\nsudo chown www-data:www-data /var/www/html/example.com/public_html\n")])])]),a("p",[e._v("Remove the default NGINX website.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("sudo rm -f /etc/nginx/sites-enabled/default\n")])])]),a("p",[e._v("Create the website configuration file using the nano editor.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("sudo nano /etc/nginx/sites-available/example.com.conf\n")])])]),a("p",[e._v("Paste "),a("code",[e._v("Ctrl+Shift+V")]),e._v(" this:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('server {\n    listen         80 default_server;\n    listen         [::]:80 default_server;\n    server_name    example.com;\n    root           /var/www/html/example.com/public_html;\n    index          index.html;\n\n    # Context limits\n    client_max_body_size 20M;\n\n    # Disable access to sensitive files\n    location ~* (app|content|lib)/.*\\.(po|php|lock|sql)$ {\n        deny all;\n    }\n\n    # Image not found replacement\n    location ~ \\.(jpe?g|png|gif|webp)$ {\n        log_not_found off;\n        error_page 404 /content/images/system/default/404.gif;\n    }\n\n    # CORS header (avoids font rendering issues)\n    location ~ \\.(ttf|ttc|otf|eot|woff|woff2|font.css|css|js)$ {\n        add_header Access-Control-Allow-Origin "*";\n    }\n\n    # Pretty URLs\n    location / {\n        index index.php;\n        try_files $uri $uri/ /index.php$is_args$query_string;\n    }\n\n    location ~* \\.php$ {\n        fastcgi_pass unix:/run/php/php7.2-fpm.sock;\n        include         fastcgi_params;\n        fastcgi_param   SCRIPT_FILENAME    $document_root$fastcgi_script_name;\n        fastcgi_param   SCRIPT_NAME        $fastcgi_script_name;\n    }\n}\n')])])]),a("p",[e._v("Write close "),a("code",[e._v("Ctrl+o Ctrl+x")]),e._v(".")]),e._v(" "),a("p",[e._v("Create the website symbolic link (site available).")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("sudo ln -s /etc/nginx/sites-available/example.com.conf /etc/nginx/sites-enabled/\n")])])]),a("p",[e._v("Restart PHP and NGINX.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("sudo systemctl restart php7.2-fpm\nsudo systemctl restart nginx\n")])])]),a("h2",{attrs:{id:"setup-https"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#setup-https"}},[e._v("#")]),e._v(" Setup HTTPS")]),e._v(" "),a("p",[e._v("Install the Certbot and web server-specific packages, then run Certbot.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("sudo apt install python-certbot-nginx\nsudo certbot --nginx\n")])])]),a("p",[e._v("Answer yes when it ask if you will like to automatically redirect HTTP traffic to HTTPS traffic.")]),e._v(" "),a("p",[e._v("When the tool completes, Certbot will update your web server configuration so that it uses the new certificate.")]),e._v(" "),a("h2",{attrs:{id:"install-chevereto"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#install-chevereto"}},[e._v("#")]),e._v(" Install Chevereto")]),e._v(" "),a("p",[e._v("Download the installer to your website directory, masked as www-data.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("sudo -u www-data wget -O /var/www/html/example.com/public_html/installer.php https://chevereto.com/download/file/installer\n")])])]),a("p",[e._v("Open your website at "),a("code",[e._v("/installer.php")]),e._v(", follow the process (ignore the warning about Nginx rules). Once done, go to the dashboad and make sure that the connecting IP match yours.")]),e._v(" "),a("h2",{attrs:{id:"real-connecting-ip-cloudflare-optional"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#real-connecting-ip-cloudflare-optional"}},[e._v("#")]),e._v(" Real connecting IP (CloudFlare, optional)")]),e._v(" "),a("p",[e._v("If you run CloudFlare you will need to configure the "),a("code",[e._v("ngx_http_realip_module")]),e._v(". Install the CloudFlare IP ranges sync script.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("wget -P /opt/scripts https://raw.githubusercontent.com/ergin/nginx-cloudflare-real-ip/master/cloudflare-sync-ips.sh\nchmod +x /opt/scripts/cloudflare-sync-ips.sh\n/opt/scripts/cloudflare-sync-ips.sh\n")])])]),a("p",[e._v("The file "),a("code",[e._v("/etc/nginx/cloudflare")]),e._v(" should include now the CloudFlare IP ranges, which now must be included into your NGINX configuration at "),a("code",[e._v("/etc/nginx/nginx.conf")]),e._v(". Include the following line inside the "),a("code",[e._v("http{}")]),e._v(" block:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("include /etc/nginx/cloudflare;\n")])])]),a("p",[e._v("Add a crontab to update CloudFlare IP ranges everyday.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("sudo crontab -e\n")])])]),a("p",[e._v("If asked about the editor, choose "),a("code",[e._v("nano")]),e._v(".")]),e._v(" "),a("p",[e._v("Paste "),a("code",[e._v("Ctrl+Shift+V")]),e._v(" this:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("# Auto sync Cloudflare IP ranges and reload NGINX\n0 */12 * * * /opt/scripts/cloudflare-sync-ips.sh >/dev/null 2>&1\n")])])]),a("p",[e._v("Write close "),a("code",[e._v("Ctrl+o Ctrl+x")]),e._v(".")]),e._v(" "),a("h2",{attrs:{id:"extra-steps"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#extra-steps"}},[e._v("#")]),e._v(" Extra Steps")]),e._v(" "),a("h3",{attrs:{id:"email"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#email"}},[e._v("#")]),e._v(" Email")]),e._v(" "),a("p",[e._v("You may need to configure email sending from this server. If you don't, make sure to fill in the email transactional service you want to use at "),a("code",[e._v("Dashboard > Settings > Email")]),e._v(".")]),e._v(" "),a("blockquote",[a("p",[e._v("We recommend to use a transactional service rather than using your server for sending emails")])]),e._v(" "),a("h3",{attrs:{id:"uptime-monitor"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#uptime-monitor"}},[e._v("#")]),e._v(" Uptime monitor")]),e._v(" "),a("p",[e._v("Setup an uptime monitoring to make sure that your website doesn't went offline without notice.")])])}),[],!1,null,null,null);t.default=n.exports}}]);